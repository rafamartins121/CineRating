@model CineRating.Models.Filmes
@{
    ViewBag.Title = "Edit";
}
<h2>Edit</h2>

@*IMPORTANTE*@
@using (Html.BeginForm("Edit", "Filmes", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @*IMPORTANTE*@
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Filmes</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @*IMPORTANTE*@
    @Html.HiddenFor(model => model.Imagem)
    @*IMPORTANTE*@
    <div class="form-group">
        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TempoExecucao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TempoExecucao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TempoExecucao, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DataLancamento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataLancamento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataLancamento, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Imagem, new { htmlAttributes = new { @class = "form-control" } })*@
            <a href="~/imagens/filmes/@Model.Imagem" target="_blank">
                <img src="~/imagens/filmes/@Model.Imagem" height="150" />
            </a>
            <input type="file" name="fileUploadImagem" style="color:blue; margin-top:1%" accept=".jpg" />
            @Html.ValidationMessageFor(model => model.Imagem, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Video, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RealizadorFK, "RealizadorFK", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("RealizadorFK", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RealizadorFK, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
